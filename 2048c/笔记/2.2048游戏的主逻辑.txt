OpenScreen



2048LOgic
	//自动生成一个字符（2/4/8）
		FillARandNum()
	//显示在屏幕
		DrawMatrix()
	while(1)
	{
		//读取用户输入
		
		
		//1.功能键q，退出游戏
			break；
		//2.方向键，做对应的处理
		
		//3.游戏是否结束
			//结束：所有格子都不是0，并且它的邻居跟它的值都不一样
			breadk；
	
	}
	
	
	

	昨天叫大家写了一个练习，随机位置，赋一个随机值
	游戏最开始的时候，界面便会在某一个随机位置显示某随机值(2 4 8)
	这个填充的时候，我们希望设置一个函数去填充，并且该函数可以复用
	所以我们得先知道有本4*4矩阵有多少个0（因为我们的新随机值是覆盖原0值）
	需要用一个4*4的矩阵作临时变量，存储应该显示的内容
	然后一次性将其刷写到字符窗口
	
	#define N 4
	int matrix2048[N][N] = {
		0,0,0,0,
		0,0,0,0,
		0,0,0,0,
		0,0,0,0
	};
	
	
	
	
	
	
	//获取4*4矩阵中有多少个0
	int	GetZeroNum()
	
	将4*4矩阵中的内容刷写到字符窗口中
	void DrawMatrix()
	
	
	//向4*4矩阵中随机位置填充一个随机值
	void FillARandNum()
	
	
	//读取用户从键盘中的输入，比如上下左右，awsd，q等。。。。
	int GetUserInput()
	
	//根据用户输入的方向，做出相应的处理，比如左右相邻格子的数据合并，以及窗口中的值整体向左移动
	void MoveToLeft()
	
	//判断游戏是否结束(如果游戏结束：1.所有的格子都不是0；2.所有格子的邻居都跟它的值不同)
	int IsGameOver()
	
	//判断用户的输入是否引起矩阵的改变
	int IsChange(int inputKey)
	比如，下面的矩阵，按左右才会对矩阵产生影响，而上下并不会引起相邻格子的合并
	2 2 4 8
	8 8 2 2
	4 4 4 4
	2 2 2 2
	
	
	
	extern关键字的作用
		1.引用外部的变量
		
		
		2.引用外部的函数
	